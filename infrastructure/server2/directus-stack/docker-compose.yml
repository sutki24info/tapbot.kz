version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=sutki24info@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --log.level=INFO
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.log
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_data/acme.json:/acme.json
      - ./traefik_data/logs:/var/log/traefik
    networks:
      - traefik-network
      - database-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik2.tapbot.kz`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$2y$$10$$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  postgres:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: directus
      POSTGRES_USER: directus_user
      POSTGRES_PASSWORD: PostgreSQL_Ultra_Secure_2025!TapBot_Kz_Server
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_custom.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      - database-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U directus_user -d directus"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2GB
        reservations:
          cpus: '0.5'
          memory: 1GB

  directus_app:
    image: directus/directus:10.10
    container_name: directus_app
    restart: unless-stopped
    environment:
      SECRET: 9e316fd0b43641cdaa3a2f144b52c6fed8ee6beee1386971ca0a228c9df3e546
      KEY: 8d38b19f41e24f95b859123867aa87f1d84cba9718d8b18853dadf3f1800d95e
      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: directus
      DB_USER: directus_user
      DB_PASSWORD: PostgreSQL_Ultra_Secure_2025!TapBot_Kz_Server
      ADMIN_EMAIL: sutki24info@gmail.com
      ADMIN_PASSWORD: DirectusAdmin_Secure_2025!Kz
      PUBLIC_URL: https://dir.tapbot.kz
    volumes:
      - directus_uploads:/directus/uploads
      - directus_database:/directus/database
      - directus_extensions:/directus/extensions
    networks:
      - traefik-network
      - database-network
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.directus.rule=Host(`dir.tapbot.kz`)"
      - "traefik.http.routers.directus.entrypoints=websecure"
      - "traefik.http.routers.directus.tls=true"
      - "traefik.http.routers.directus.tls.certresolver=letsencrypt"
      - "traefik.http.services.directus.loadbalancer.server.port=8055"
      - "traefik.docker.network=directus-stack_traefik-network"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1GB
        reservations:
          cpus: '0.25'
          memory: 512M

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: sutki24info@gmail.com
      PGADMIN_DEFAULT_PASSWORD: PgAdmin_Secure_2025!Kz
      PGADMIN_DISABLE_POSTFIX: "true"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - traefik-network
      - database-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pg.tapbot.kz`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.docker.network=directus-stack_traefik-network"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M

  # === НОВЫЕ СЕРВИСЫ ДЛЯ АДМИНИСТРИРОВАНИЯ ===

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer2.tapbot.kz`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=directus-stack_traefik-network"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle_logs
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-network
    environment:
      DOZZLE_NO_ANALYTICS: "true"
      DOZZLE_ENABLE_ACTIONS: "false"
      DOZZLE_FILTER: "status=running"
      DOZZLE_LEVEL: info
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle.rule=Host(`logs2.tapbot.kz`)"
      - "traefik.http.routers.dozzle.entrypoints=websecure"
      - "traefik.http.routers.dozzle.tls=true"
      - "traefik.http.routers.dozzle.tls.certresolver=letsencrypt"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
      - "traefik.docker.network=directus-stack_traefik-network"
      # КРИТИЧНО: Добавляем BasicAuth защиту
      - "traefik.http.routers.dozzle.middlewares=dozzle-auth"
      - "traefik.http.middlewares.dozzle-auth.basicauth.users=admin:$$apr1$$T0kZoDHx$$2RB7oWfazaA9r4.S3kTPn0"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M

volumes:
  postgres_data:
  directus_uploads:
  directus_database:
  directus_extensions:
  pgadmin_data:
  portainer_data:

networks:
  traefik-network:
    external: false
  database-network:
    internal: true